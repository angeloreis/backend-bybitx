openapi: 3.0.1
info:
  title: Desafio backend Jr
  description: Está é documentação do desafio desenvolvedor backend jr da byBitx
  contact:
    email: angelo.desenvolvedor@gmail.com
  version: 1.0.0.alpha
servers:
- url: https://app.localhost.io/
- url: http://app.localhost.io/
tags:
- name: videogame
  description: Todos os procedimentos para videogame
- name: game
  description: Todos os procedimentos para jogos
paths:
  /videogame:
    get:
      tags:
      - videogame
      summary: Lista todos os video games cadastrados
      operationId: index
      responses:
        200:
          description: Resultado da consulta
          content: {}
    post:
      tags:
      - videogame
      summary: Cadastrando novo console
      description: Cadastrandamento de novo console, aqui você pode informar um array
        com vários json dentro para cadastro de multiplos consoles
      operationId: update
      requestBody:
        description: Corpo do json para cadastramento
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/videogame'
        required: true
      responses:
        200:
          description: Retorno da api com sucesso!
          content: {}
      x-codegen-request-body-name: body
  /videogame/:id:
    get:
      tags:
      - videogame
      summary: Busca o console por id
      description: Valor da id do console
      operationId: videogamebyId
      parameters:
      - name: id
        in: query
        schema: {}
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/videogame'
    put:
      tags:
      - videogame
      summary: Busca o console por id e atualiza o registro
      description: Busca o console por id e atualiza o registro
      operationId: updateVideoGame
      requestBody:
        description: Dados do console em json
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/videogame'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/videogame'
    delete:
      tags:
      - videogame
      summary: Busca o console por id e deleta
      description: Busca o console por id e deleta
      operationId: delete
      responses:
        200:
          description: successful operation
  /game:
    get:
      tags:
      - game
      summary: Lista todos os jogos cadastrados
      operationId: findall
      responses:
        200:
          description: Resultado da consulta
          content: {}
    post:
      tags:
      - game
      summary: Cadastrando novo jogo
      description: Cadastrandamento de novo console, aqui você pode informar um array
        com vários json dentro para cadastro de multiplos consoles
      operationId: updatePet
      requestBody:
        description: Corpo do json para cadastramento
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/videogame'
        required: true
      responses:
        200:
          description: Retorno da api com sucesso!
          content: {}
      x-codegen-request-body-name: body
  /game/:id:
    get:
      tags:
      - game
      summary: Busca o jogo por id
      description: Valor da id do console
      operationId: findPetsByStatus
      parameters:
      - name: id
        in: query
        schema: {}
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/videogame'
    put:
      tags:
      - game
      summary: Busca o console por id e atualiza o registro
      description: Busca o console por id e atualiza o registro
      requestBody:
        description: Dados do console em json
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/videogame'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/videogame'
    delete:
      tags:
      - game
      summary: Busca o console por id e deleta
      description: Busca o console por id e deleta
      responses:
        200:
          description: successful operation
  /game/videogame/:id:
    get:
      tags:
      - game
      summary: Busca o jogo por id do console
      description: Valor da id do console
      operationId: getGameByConsoleId
      parameters:
      - name: id
        in: query
        schema: {}
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/videogame'
components:
  schemas:
    videogame:
      type: object
      properties:
        name:
          minLength: 3
          type: string
        company:
          minLength: 3
          type: string
    game:
      type: object
      properties:
        id:
          type: string
          format: objectId
        name:
          type: string
        videogame:
          pattern: videogame
          type: string
    ApiResponse:
      type: object
      properties:
        status:
          type: boolean
        data:
          type: object
          properties: {}
